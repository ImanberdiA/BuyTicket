{"version":3,"sources":["../../../libs/controller/userController.js"],"names":[],"mappings":"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","file":"userController.js","sourcesContent":["\"use strict\";\r\nvar libs = process.cwd() + '/libs/';\r\nconst userService = require(libs + 'service/userService');\r\nconst url = require('url');\r\nlet cntOfItems, dataNewUser;\r\n\r\nclass userController {\r\n    // Get all users from users (or size users)\r\n    static async getAllUsers(req, res) {\r\n        const countOfItems = url.parse(req.url, true).query.counts;\r\n        const tmp = (typeof(countOfItems)).localeCompare(\"undefined\");\r\n        if(tmp == 0){\r\n            cntOfItems = 10000;\r\n        }else {\r\n            cntOfItems = parseInt(countOfItems);\r\n        }\r\n        const size = parseInt(req.query.size, 10) || cntOfItems;\r\n        try {\r\n            const userResponses = await userService.getUsers(size);\r\n            res.send(userResponses);\r\n        } catch (error) {\r\n            res.status(523);\r\n            res.send(JSON.stringify({message: 'Error: userController/getUsers'}));\r\n            console.log(\"Error: userController/getUsers\");\r\n        }\r\n    }\r\n\r\n    // Get a specific user from users-table\r\n    static async getSpecificUser(req, res) {\r\n        const userId = req.params.id;\r\n        try {\r\n            const userResponses = await userService.getSpecificUser(userId);\r\n            res.send(userResponses);\r\n        } catch (error) {\r\n            res.status(523);\r\n            res.send(JSON.stringify({message: 'Error: userController/getSpecificUser'}));\r\n            console.log(\"Error: userController/getSpecificUser\");\r\n        }\r\n    }\r\n\r\n    // Create new user in users-table\r\n    static async createNewUser (req, res){\r\n        const tmptypeUserId = parseInt(req.body.Password).toString().localeCompare(\"NaN\");\r\n        if((tmptypeUserId === 0)){\r\n            dataNewUser = req.body;\r\n            try {\r\n                const userResponses = await userService.createNewUser(dataNewUser);\r\n                res.send(userResponses);\r\n            } catch (error) {\r\n                console.log(\"Error: userController/createNewUser\");\r\n                res.sendStatus(400);\r\n            }\r\n        }else{\r\n            res.send(\"Введите корректные данные\");\r\n        }\r\n    }\r\n\r\n    // Update specific user in users-table\r\n    static async updateUser(req, res) {\r\n        const userId = req.params.id;\r\n        const fname = parseInt(req.body.Genre).toString().localeCompare(\"NaN\");\r\n        const lname = parseInt(req.body.Country).toString().localeCompare(\"NaN\");\r\n        if((fname === 0) && (lname === 0)) {\r\n            const dataUpdateUser = req.body;\r\n            try {\r\n                const userResponses = await userService.updateUser(dataUpdateUser, userId);\r\n                res.send(userResponses);\r\n            } catch (error) {\r\n                console.log(\"Error: userController/updateUser\");\r\n            }\r\n        }else{\r\n            res.send(\"Введите корректные данные\");\r\n        }\r\n    }\r\n\r\n    // Delete a specific user in users-table\r\n    static async deleteUser(req, res) {\r\n        const userId = req.params.id;\r\n        try {\r\n            const userResponses = await userService.deleteUser(userId);\r\n            res.send(userResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: userController/deleteUser\");\r\n            res.status(523);\r\n            res.send(JSON.stringify({message: 'Error in deleteUser'}));\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = userController;"]}