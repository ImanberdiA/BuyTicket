{"version":3,"sources":["../generateData.js"],"names":[],"mappings":";;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7B,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC;;AAEpC,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC;AACvC,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;;AAEtC,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,YAAY,CAAC,CAAC;AACxC,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,GAAG,cAAc,CAAC,CAAC;AAC5C,IAAI,WAAW,GAAG,OAAO,CAAC,IAAI,GAAG,mBAAmB,CAAC,CAAC;AACtD,IAAI,YAAY,GAAG,OAAO,CAAC,IAAI,GAAG,oBAAoB,CAAC,CAAC;;AAExD,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,UAAS,GAAG,EAAE;AAC1B,QAAI,IAAI,GAAG,IAAI,IAAI,CAAC;AAChB,gBAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC;AAC7C,gBAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC;KAChD,CAAC,CAAC;;AAEH,QAAI,CAAC,IAAI,CAAC,UAAS,GAAG,EAAE,IAAI,EAAE;AAC1B,YAAG,CAAC,GAAG,EAAE;AACL,eAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9D,MAAK;AACF,mBAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACzB;KACJ,CAAC,CAAC;CACN,CAAC,CAAC;;AAEH,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAS,GAAG,EAAE;AAC5B,QAAI,MAAM,GAAG,IAAI,MAAM,CAAC;AACpB,gBAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,yBAAyB,CAAC;AAC/C,oBAAY,EAAE,MAAM,CAAC,GAAG,CAAC,6BAA6B,CAAC;KAC1D,CAAC,CAAC;;AAEH,UAAM,CAAC,IAAI,CAAC,UAAS,GAAG,EAAE,MAAM,EAAE;;AAE9B,YAAG,CAAC,GAAG,EAAE;AACL,eAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;SACxE,MAAM;AACH,mBAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACzB;KAEJ,CAAC,CAAC;CACN,CAAC,CAAC;;AAEH,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,GAAG,EAAE;AAClC,QAAI,GAAG,EAAE;AACL,eAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACzB;CACJ,CAAC,CAAC;;AAEH,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,GAAG,EAAE;AACnC,QAAI,GAAG,EAAE;AACL,eAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACzB;CACJ,CAAC,CAAC;;AAEH,UAAU,CAAC,YAAW;AAClB,MAAE,CAAC,UAAU,EAAE,CAAC;CACnB,EAAE,IAAI,CAAC,CAAC","file":"generateData.js","sourcesContent":["var faker = require('faker');\n\nvar libs = process.cwd() + '/libs/';\n\nvar log = require(libs + 'log')(module);\nvar db = require(libs + 'db/mongoose');\nvar config = require(libs + 'config');\n\nvar User = require(libs + 'model/user');\nvar Client = require(libs + 'model/client');\nvar AccessToken = require(libs + 'model/accessToken');\nvar RefreshToken = require(libs + 'model/refreshToken');\n\nUser.remove({}, function(err) {\n    var user = new User({ \n        username: config.get(\"default:user:username\"), \n        password: config.get(\"default:user:password\") \n    });\n    \n    user.save(function(err, user) {\n        if(!err) {\n            log.info(\"New user - %s:%s\", user.username, user.password);\n        }else {\n            return log.error(err);\n        }\n    });\n});\n\nClient.remove({}, function(err) {\n    var client = new Client({\n        clientId: config.get(\"default:client:clientId\"), \n        clientSecret: config.get(\"default:client:clientSecret\") \n    });\n    \n    client.save(function(err, client) {\n\n        if(!err) {\n            log.info(\"New client - %s:%s\", client.clientId, client.clientSecret);\n        } else {\n            return log.error(err);\n        }\n\n    });\n});\n\nAccessToken.remove({}, function (err) {\n    if (err) {\n        return log.error(err);\n    }\n});\n\nRefreshToken.remove({}, function (err) {\n    if (err) {\n        return log.error(err);\n    }\n});\n\nsetTimeout(function() {\n    db.disconnect();\n}, 3000);"]}