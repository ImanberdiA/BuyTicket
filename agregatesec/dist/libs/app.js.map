{"version":3,"sources":["../../libs/app.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC5C,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACxC,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,cAAc,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAEhD,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC;AACpC,OAAO,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC;;AAE5B,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACjC,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC;;;AAGnC,IAAI,KAAK,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACtC,IAAI,QAAQ,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;AAE5C,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;;AAEpB,IAAM,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC1C,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;AACzC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAC9B,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,GAAG,QAAQ,CAAC,CAAC;AACvC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACpD,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;AAC1B,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;;;AAG/B,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;AAC7B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;;AAGvB,GAAG,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC;AAC5B,OAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAChB,OAAG,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3D,OAAG,CAAC,IAAI,CAAC;AACR,aAAK,EAAE,WAAW;KAClB,CAAC,CAAC;AACH,WAAO;CACV,CAAC,CAAC;;;AAGH,GAAG,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC;AACjC,OAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;AAC9B,OAAG,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;AAC/D,OAAG,CAAC,IAAI,CAAC;AACR,aAAK,EAAE,GAAG,CAAC,OAAO;KAClB,CAAC,CAAC;AACH,WAAO;CACV,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","file":"app.js","sourcesContent":["var express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar passport = require('passport');\nvar methodOverride = require('method-override');\n\nvar libs = process.cwd() + '/libs/';\nrequire(libs + 'auth/auth');\n\nvar config = require('./config');\nvar log = require('./log')(module);\n\n// var api = require('./routes/api');\nvar users = require('./routes/users');\nvar articles = require('./routes/articles');\n\nvar app = express();\n\nconst templating = require('consolidate');\napp.engine('hbs', templating.handlebars);\napp.set('view engine', 'hbs');\napp.set('views', __dirname + '/views');\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(methodOverride());\napp.use(passport.initialize());\n\n// Здесь пути\napp.use('/api/users', users);\napp.use('/', articles);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next){\n    res.status(404);\n    log.debug('%s %d %s', req.method, res.statusCode, req.url);\n    res.json({ \n    \terror: 'Not found' \n    });\n    return;\n});\n\n// error handlers\napp.use(function(err, req, res, next){\n    res.status(err.status || 500);\n    log.error('%s %d %s', req.method, res.statusCode, err.message);\n    res.json({ \n    \terror: err.message\n    });\n    return;\n});\n\nmodule.exports = app;"]}