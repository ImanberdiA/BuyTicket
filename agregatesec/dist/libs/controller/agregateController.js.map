{"version":3,"sources":["../../../libs/controller/agregateController.js"],"names":[],"mappings":"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","file":"agregateController.js","sourcesContent":["\"use strict\";\r\nvar libs = process.cwd() + '/libs/';\r\nconst agregateService = require(libs + 'service/agregateService');\r\nconst url = require('url');\r\nlet playlistResponses, contentResponses, userResponses;\r\n\r\nclass agregateController {\r\n\r\n    static async index(req, res) {\r\n        res.render('index', {\r\n\r\n        });\r\n    }\r\n\r\n\r\n    /* CONTENTS SERVICE. BEGIN */\r\n\r\n    // Get All Contents from content service\r\n    static async getAllContents(req, res) {\r\n        // const token = res.req.headers.authorization;\r\n        const countOfItems = url.parse(req.url, true).query.counts;\r\n        const tmp = (typeof(countOfItems)).localeCompare(\"undefined\");\r\n        try {\r\n            if(tmp == 0){\r\n                contentResponses = await agregateService.getAllContents(req, res, 1000);\r\n            }else {\r\n                contentResponses = await agregateService.getAllContents(req, res, countOfItems);\r\n            }\r\n            // console.log(contentResponses);\r\n            res.render('contents', {\r\n                contentObject: contentResponses\r\n            });\r\n\r\n            // res.send(contentResponses);\r\n        } catch (error) {\r\n            //console.log(\"Error: agregateController/getAllContents\");\r\n        }\r\n    }\r\n\r\n    // Get Specific Content from content service\r\n    static async getSpecificContent(req, res) {\r\n        const contentId = req.params.id;\r\n        try {\r\n            const contentResponses = await agregateService.getSpecificContent(req, res, contentId);\r\n            res.render('contents', {\r\n                contentObject: contentResponses\r\n            });\r\n            // res.send(contentResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/getSpecificContent\");\r\n        }\r\n    }\r\n\r\n    // Create New Content in content service\r\n    static async createNewContent(req, res) {\r\n        const token = res.req.headers.authorization;\r\n        const dataNewContent = req.body;\r\n        try {\r\n            const contentResponses = await agregateService.createNewContent(req, res, dataNewContent, token);\r\n\r\n            console.log(contentResponses);\r\n\r\n            res.render('contents', {\r\n                mess: contentResponses.message\r\n            });\r\n\r\n            // res.send(contentResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/createNewContent\");\r\n        }\r\n    }\r\n\r\n    // Update a specific content in content service\r\n    static async updateContent(req, res) {\r\n        const token = res.req.headers.authorization;\r\n        const contentId = req.params.id;\r\n        const dataUpdateContent = req.body;\r\n        try {\r\n            const contentResponses = await agregateService.updateContent(req, res, dataUpdateContent, contentId, token);\r\n            res.send(contentResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/updateContent\");\r\n        }\r\n    }\r\n\r\n    // Delete a specific content in content service\r\n    static async deleteContent(req, res) {\r\n        const token = res.req.headers.authorization;\r\n        const contentId = req.params.id;\r\n        try {\r\n            const contentResponses = await agregateService.deleteContent(req, res, contentId, token);\r\n            res.send(contentResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController / deleteContent\");\r\n            res.sendStatus(403);\r\n            res.send(JSON.stringify({message: 'Error: agregateController / deleteContent'}));\r\n        }\r\n    }\r\n\r\n    /* CONTENTS SERVICE. END */\r\n\r\n\r\n    /* USERS SERVICE. BEGIN */\r\n\r\n    // Get All Users from user service\r\n    static async getAllUsers(req, res) {\r\n        const countOfItems = url.parse(req.url, true).query.counts;\r\n        const tmp = (typeof(countOfItems)).localeCompare(\"undefined\");\r\n        try {\r\n            if (tmp == 0){\r\n                userResponses = await agregateService.getAllUsers(req, res, 1000);\r\n            }else{\r\n                userResponses = await agregateService.getAllUsers(req, res, countOfItems);\r\n            }\r\n            //console.log(userResponses);\r\n            res.render('users', {\r\n                userObject: userResponses\r\n            });\r\n\r\n            // res.send(userResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/getAllUsers\");\r\n        }\r\n    }\r\n\r\n    // Get Specific User from user service\r\n    static async getSpecificUser(req, res) {\r\n        const userId = req.params.id;\r\n        try {\r\n            const userResponses = await agregateService.getSpecificUser(req, res, userId);\r\n            res.render('users', {\r\n                userObject: userResponses\r\n            });\r\n            // res.send(userResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/getSpecificUser\");\r\n        }\r\n    }\r\n\r\n    // Create New User in user service\r\n    static async createNewUser(req, res) {\r\n        const token = res.req.headers.authorization;\r\n        const dataNewUser = req.body;\r\n        try {\r\n            const userResponses = await agregateService.createNewUser(req, res, dataNewUser, token);\r\n            // res.send(userResponses);\r\n            // console.log(userResponses);\r\n\r\n            res.render('users', {\r\n                mess: userResponses.message\r\n            });\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/createNewUser\");\r\n        }\r\n    }\r\n\r\n    // Update a specific user in user service\r\n    static async updateUser(req, res) {\r\n        const token = res.req.headers.authorization;\r\n        const userId = req.params.id;\r\n        const dataUpdateUser = req.body;\r\n        try {\r\n            const userResponses = await agregateService.updateUser(req, res, dataUpdateUser, userId, token);\r\n            // res.send(userResponses);\r\n\r\n            console.log(\"userId for update - \" + userId);\r\n            console.log(dataUpdateUser);\r\n\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/updateUser\");\r\n        }\r\n    }\r\n\r\n    // Delete a specific user in user service\r\n    static async deleteUser(req, res) {\r\n        const token = res.req.headers.authorization;\r\n        const userId = req.params.id;\r\n        // const userId = req.body.id;\r\n        try {\r\n            const userResponses = await agregateService.deleteUser(req, res, userId, token);\r\n            res.send(userResponses);\r\n            // console.log(\"userId for deleete - \" + userId);\r\n            // console.log(userResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/deleteUser\");\r\n            res.sendStatus(403);\r\n            res.send(JSON.stringify({message: 'Error: agregateController/deleteUser'}));\r\n        }\r\n    }\r\n\r\n    /* USERS SERVICE. END */\r\n\r\n\r\n    /* PLAYLISTS SERVICE. BEGIN */\r\n\r\n    // Get All Playlists from playlist service\r\n    static async getAllPlaylists(req, res) {\r\n        const countOfItems = url.parse(req.url, true).query.counts;\r\n        const tmp = (typeof(countOfItems)).localeCompare(\"undefined\");\r\n        try {\r\n            if(tmp == 0){\r\n                playlistResponses = await agregateService.getAllPlaylist(req, res, 1000);\r\n            }else{\r\n                playlistResponses = await agregateService.getAllPlaylist(req, res, countOfItems);\r\n            }\r\n            // console.log(playlistResponses);\r\n            res.render('playlists', {\r\n                playlistObject: playlistResponses\r\n            });\r\n\r\n            // res.send(playlistResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/getAllPlaylist\");\r\n        }\r\n    }\r\n\r\n    // Get Specific Playlist from playlist service\r\n    static async getSpecificPlaylist(req, res) {\r\n        const playlistId = req.params.id;\r\n        try {\r\n            const playlistResponses = await agregateService.getSpecificPlaylist(req, res, playlistId);\r\n\r\n            res.render('playlists', {\r\n                playlistObject: playlistResponses\r\n            });\r\n            // res.send(playlistResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/getSpecificPlaylist\");\r\n        }\r\n    }\r\n\r\n    // Create New Playlist in playlist service\r\n    static async createNewPlaylist(req, res) {\r\n        const token = res.req.headers.authorization;\r\n        const dataNewPlaylist = req.body;\r\n        try {\r\n            const playlistResponses = await agregateService.createNewPlaylist(req, res, dataNewPlaylist, token);\r\n            // res.send(playlistResponses);\r\n            console.log(playlistResponses);\r\n\r\n            res.render('playlists', {\r\n                mess: playlistResponses.message\r\n            });\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/createNewPlaylist\");\r\n        }\r\n    }\r\n\r\n    // Update a specific playlist in playlist service\r\n    static async updatePlaylist(req, res) {\r\n        const token = res.req.headers.authorization;\r\n        const playlistId = req.params.id;\r\n        const dataUpdatePlaylist = req.body;\r\n        try {\r\n            const playlistResponses = await agregateService.updatePlaylist(req, res, dataUpdatePlaylist, playlistId, token);\r\n            res.send(playlistResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/updatePlaylist\");\r\n        }\r\n    }\r\n\r\n    // Delete a specific playlist in playlist service\r\n    static async deletePlaylist(req, res) {\r\n        const token = res.req.headers.authorization;\r\n        const playlistId = req.params.id;\r\n        try {\r\n            const playlistResponses = await agregateService.deletePlaylist(req, res, playlistId, token);\r\n            res.send(playlistResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/deletePlaylist\");\r\n            res.sendStatus(403);\r\n            res.send(JSON.stringify({message: 'Error: agregateController/deletePlaylist'}));\r\n        }\r\n    }\r\n\r\n    /* PLAYLISTS SERVICE. END */\r\n\r\n\r\n    static async authMethod(req, res) {\r\n        // console.log(req.query);\r\n        const authData = req.query;\r\n        try {\r\n            const authDataResponses = await agregateService.authMethod(req, res, authData);\r\n            const bool = authDataResponses[0].success;\r\n            if (bool) {\r\n                res.send(\r\n                    '<!DOCTYPE html>\\n' +\r\n                    '<html lang=\"en\">\\n' +\r\n                    '<head>\\n' +\r\n                    '    <title>Вход в систему</title>\\n' +\r\n                    '    <meta charset=\"utf-8\">\\n' +\r\n                    '    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n' +\r\n                    '    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\\n' +\r\n                    '    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\\n' +\r\n                    '    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\\n' +\r\n                    '    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n' +\r\n                    '    <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\\n' +\r\n                    '</head>\\n' +\r\n                    '<body>\\n' +\r\n                    '<nav class=\"navbar navbar-inverse\">\\n' +\r\n                    '    <div class=\"container-fluid\">\\n' +\r\n                    '        <div class=\"navbar-header\">\\n' +\r\n                    '            <a class=\"navbar-brand\" href=\"http://localhost:1003\">Music Player</a>\\n' +\r\n                    '        </div>\\n' +\r\n                    '        <ul class=\"nav navbar-nav\">\\n' +\r\n                    '            <li class=\"active\"><a href=\"#\">Войти</a></li>\\n' +\r\n                    '            <li><a href=\"#\">Регистрация</a></li>\\n' +\r\n                    '        </ul>\\n' +\r\n                    '    </div>\\n' +\r\n                    '</nav>' +\r\n                    '<div class=\"container\">\\n' +\r\n                    '    <form method=\"POST\" action=\"/login\" id=\\'formaDel\\' class=\"w3-container w3-card-4 w3-light-grey w3-text-blue w3-margin\">\\n' +\r\n                    '        <!--<form method=\"POST\" action=\"/users/new\">-->\\n' +\r\n                    '        <div class=\"w3-panel w3-green w3-round-xlarge\">\\n' +\r\n                    '            <h5>Войти в систему</h5>\\n' +\r\n                    '        </div>\\n' +\r\n                    '        <div class=\"form-row\">\\n' +\r\n                    '            <div>\\n' +\r\n                    '                <label for=\"Login\">Логин</label>\\n' +\r\n                    '                <input type=\"text\" class=\"form-control\" id=\"Login\" placeholder=\"Email...\" name=\"Login\">\\n' +\r\n                    '            </div>\\n' +\r\n                    '            <div>\\n' +\r\n                    '                <label for=\"Password\">Пароль</label>\\n' +\r\n                    '                <input type=\"text\" class=\"form-control\" id=\"Password\" placeholder=\"Пароль...\" name=\"Password\">\\n' +\r\n                    '            </div>\\n' +\r\n                    '        </div>\\n' +\r\n                    '        <input type=\"submit\" class=\"w3-button w3-block w3-section w3-green w3-ripple w3-padding\" value=\"ВОЙТИ\"/>\\n' +\r\n                    '    </form>\\n' +\r\n                    '</div>\\n' +\r\n                    '\\n' +\r\n                    '</body>\\n' +\r\n                    '</html>'\r\n                );\r\n            } else {\r\n                res.send(status(404));\r\n            }\r\n            // res.send(authDataResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/authMethod\");\r\n            res.sendStatus(403);\r\n            res.send(JSON.stringify({message: 'Error: agregateController/authMethod'}));\r\n        }\r\n    }\r\n\r\n    static async loginGetCode(req, res) {\r\n        const dataLoginGetCode = req.body;\r\n        try {\r\n            const loginGetCodeResponses = await agregateService.loginGetCode(req, res, dataLoginGetCode);\r\n            // res.send(loginGetCodeResponses);\r\n            console.log(loginGetCodeResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: agregateController/loginGetCode\");\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = agregateController;"]}