{"version":3,"sources":["../../../libs/routes/users.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;;AAE9B,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC;;AAEpC,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC;;AAEvC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EACnE,UAAS,GAAG,EAAE,GAAG,EAAE;;;;;AAKf,OAAG,CAAC,IAAI,CAAC;AACR,eAAO,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM;AACxB,YAAI,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;AACvB,aAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,KAAK;KACzB,CAAC,CAAC;CACN,CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"users.js","sourcesContent":["var express = require('express');\nvar passport = require('passport');\nvar router = express.Router();\n\nvar libs = process.cwd() + '/libs/';\n\nvar db = require(libs + 'db/mongoose');\n\nrouter.get('/info', passport.authenticate('bearer', { session: false }),\n    function(req, res) {\n        // req.authInfo is set using the `info` argument supplied by\n        // `BearerStrategy`.  It is typically used to indicate scope of the token,\n        // and used in access control checks.  For illustrative purposes, this\n        // example simply returns the scope in the response.\n        res.json({ \n        \tuser_id: req.user.userId, \n        \tname: req.user.username, \n        \tscope: req.authInfo.scope \n        });\n    }\n);\n\nmodule.exports = router;"]}