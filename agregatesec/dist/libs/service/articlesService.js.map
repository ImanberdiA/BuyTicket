{"version":3,"sources":["../../../libs/service/articlesService.js"],"names":[],"mappings":";;;;;;AAAA,IAAI,oBAAoB,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACtD,IAAI,UAAU,GAAG,SAAS,CAAC;AAC3B,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;IAEzB,eAAe;aAAf,eAAe;8BAAf,eAAe;;;iBAAf,eAAe;;eACN,gBAAG;AACV,sBAAU,GAAG,KAAK,CAAC,gBAAgB,CAAC;AAChC,oBAAI,EAAE,WAAW;AACjB,oBAAI,EAAE,MAAM;AACZ,wBAAQ,EAAE,EAAE;AACZ,wBAAQ,EAAE,WAAW;aACxB,CAAC,CAAC;AACH,mBAAO,eAAe,CAAC;SAC1B;;;eAG0B,wBAAC,GAAG,EAAE,GAAG,EAAE,YAAY;gBAEpC,gBAAgB;;;;;;wDAAS,eAAe,CAAC,0BAA0B,CAAC,YAAY,CAAC;;;AAAjF,wCAAgB;4DACf,gBAAgB;;;;;;AAEvB,2BAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAChB,2BAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,OAAO,EAAE,uCAAuC,EAAC,CAAC,CAAC,CAAC;AAC7E,+BAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;;;;;;;SAE5D;;;eACgC,oCAAC,YAAY,EAAE;AAC5C,mBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACpC,oCAAoB,CAAC;AACjB,0BAAM,EAAE,KAAK;AACb,uBAAG,EAAE,yCAAyC,GAAG,YAAY;AAC7D,wBAAI,EAAE,IAAI;iBACb,CAAC,CAAC,IAAI,CAAC,UAAU,QAAQ,EAAE;AACxB,2BAAO,CAAC,QAAQ,CAAC,CAAC;iBACrB,CAAC,SAAM,CAAC,UAAU,GAAG,EAAE;AACpB,2BAAO,CAAC,mDAAmD,CAAC,CAAC;iBAChE,CAAC,CAAC;aACN,CAAC,CAAC;SACN;;;WAlCC,eAAe;;;AAqCrB,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC,IAAI,EAAE,CAAC","file":"articlesService.js","sourcesContent":["let reqPromGetAllContent = require('request-promise');\r\nlet connection = undefined;\r\nconst mysql = require('mysql');\r\n\r\nclass articlesService {\r\n    static init() {\r\n        connection = mysql.createConnection({\r\n            host: 'localhost',\r\n            user: 'root',\r\n            password: '',\r\n            database: 'user_side'\r\n        });\r\n        return articlesService;\r\n    }\r\n\r\n\r\n    static async getAllContents(req, res, countOfItems){\r\n        try {\r\n            const contentResponses = await articlesService.getAllContentRequestMethod(countOfItems);\r\n            return contentResponses;\r\n        } catch (error) {\r\n            res.status(523);\r\n            res.send(JSON.stringify({message: 'Error: articlesService/getAllContents'}));\r\n            console.log(\"Error: articlesService/getAllContents\");\r\n        }\r\n    }\r\n    static getAllContentRequestMethod(countOfItems) {\r\n        return new Promise((resolve, reject) => {\r\n            reqPromGetAllContent({\r\n                method: 'GET',\r\n                uri: 'http://localhost:1003/contents/?counts=' + countOfItems,\r\n                json: true\r\n            }).then(function (response) {\r\n                resolve(response);\r\n            }).catch(function (err) {\r\n                resolve(\"Error: agregateService/getAllContentRequestMethod\");\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = articlesService.init();"]}