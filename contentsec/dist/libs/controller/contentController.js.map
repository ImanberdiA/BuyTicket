{"version":3,"sources":["../../../libs/controller/contentController.js"],"names":[],"mappings":"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","file":"contentController.js","sourcesContent":["\"use strict\";\r\nvar libs = process.cwd() + '/libs/';\r\nconst contentService = require(libs + 'service/contentService');\r\nconst url = require('url');\r\nlet cntOfItems, dataNewContent;\r\n\r\nclass contentController {\r\n    // Get all contents from contents (or size contents)\r\n    static async getAllContents(req, res) {\r\n        const countOfItems = url.parse(req.url, true).query.counts;\r\n        const tmp = (typeof(countOfItems)).localeCompare(\"undefined\");\r\n        if(tmp == 0){\r\n            cntOfItems = 10000;\r\n        }else {\r\n            cntOfItems = parseInt(countOfItems);\r\n        }\r\n        const size = parseInt(req.query.size, 10) || cntOfItems;\r\n        try {\r\n            const contentResponses = await contentService.getContents(size);\r\n            res.send(contentResponses);\r\n        } catch (error) {\r\n            res.status(523);\r\n            res.send(JSON.stringify({message: 'Error: contentController/getAllContents'}));\r\n            console.log(\"Error: contentController/getContents\");\r\n        }\r\n    }\r\n\r\n    // Get a specific content from contents-table\r\n    static async getSpecificContent(req, res) {\r\n        const contentId = req.params.id;\r\n        try {\r\n            const contentResponses = await contentService.getSpecificContent(contentId);\r\n            res.send(contentResponses);\r\n        } catch (error) {\r\n            res.status(523);\r\n            res.send(JSON.stringify({message: 'Error: contentController/getSpecificContent'}));\r\n            console.log(\"Error: contentController/getSpecificContent\");\r\n        }\r\n    }\r\n\r\n    // Create new content in contents-table\r\n    static async createNewContent (req, res) {\r\n        const gnr = parseInt(req.body.Genre).toString().localeCompare(\"NaN\");\r\n        const cntry = parseInt(req.body.Country).toString().localeCompare(\"NaN\");\r\n        if((gnr === 0) && (cntry === 0)){\r\n            dataNewContent = req.body;\r\n            try {\r\n                const contentResponses = await contentService.createNewContent(dataNewContent);\r\n                res.send(contentResponses);\r\n            } catch (error) {\r\n                console.log(\"Error: contentController/createNewContent\");\r\n                res.sendStatus(400);\r\n                res.send(JSON.stringify({message: 'Error: contentController/createNewContent'}));\r\n            }\r\n        }else{\r\n            res.send(\"Введите корректные данные\");\r\n        }\r\n    }\r\n\r\n    // Update specific content in contents-table\r\n    static async updateContent(req, res) {\r\n        const contentId = req.params.id;\r\n        const gnr = parseInt(req.body.Genre).toString().localeCompare(\"NaN\");\r\n        const cntry = parseInt(req.body.Country).toString().localeCompare(\"NaN\");\r\n        if((gnr === 0) && (cntry === 0)){\r\n            const dataUpdateContent = req.body;\r\n            try {\r\n                const contentResponses = await contentService.updateContent(dataUpdateContent, contentId);\r\n                res.send(contentResponses);\r\n            } catch (error) {\r\n                console.log(\"Error: contentController/updateContent\");\r\n            }\r\n        } else {\r\n            res.send(\"Введите корректные данные\");\r\n        }\r\n    }\r\n\r\n    // Delete a specific content in contents-table\r\n    static async deleteContent(req, res) {\r\n        const contentId = req.params.id;\r\n        try {\r\n            const contentResponses = await contentService.deleteContent(contentId);\r\n            res.send(contentResponses);\r\n        } catch (error) {\r\n            console.log(\"Error: contentController/deleteContent\");\r\n            res.sendStatus(403);\r\n            res.send(JSON.stringify({message: 'Error: contentController/deleteContent'}));\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = contentController;"]}